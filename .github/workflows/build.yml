name: Build Magisk

on: 
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_NDK_VERSION: "25.2.9519653"
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Install NDK
      run: |
        echo "y" | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;$ANDROID_NDK_VERSION"
        echo "ndk.dir=${ANDROID_HOME}/ndk/$ANDROID_NDK_VERSION" >> local.properties
        echo "sdk.dir=${ANDROID_HOME}" >> local.properties
        echo "ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/$ANDROID_NDK_VERSION" >> $GITHUB_ENV
        
    - name: Verify Environment
      run: |
        echo "=== Environment Variables ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
        
        echo "=== local.properties content ==="
        cat local.properties
        
        echo "=== NDK Directory Check ==="
        ls -la ${ANDROID_HOME}/ndk/$ANDROID_NDK_VERSION
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build Debug
      run: |
        ./gradlew clean
        ./gradlew assembleDebug --stacktrace --info
        
    - name: Check Build Outputs
      run: |
        echo "=== Project Structure ==="
        ls -R .
        
        echo "=== Specific Directories ==="
        ls -la app/build/ || echo "app/build/ not found"
        ls -la out/ || echo "out/ not found"
        
    - name: Upload Debug APK
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: magisk-debug
        path: |
          app/build/outputs/apk/debug/*.apk
          app/build/outputs/**/*.apk
        if-no-files-found: warn
        
    - name: Upload Build Outputs
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: magisk-files
        path: |
          out/*
          app/build/outputs/**/*
        if-no-files-found: warn

    - name: Upload Build Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: |
          app/build/reports/
          .gradle/daemon/
          *.log
